services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.2.0
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_SERVERS: zookeeper:2888:3888

  kafka:
    image: confluentinc/cp-kafka:7.2.0
    hostname: kafka
    container_name: kafka
    ports:
      - "9092:9092"
      - "29092:29092"
      - "9999:9999"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:19092,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092,DOCKER://host.docker.internal:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_JMX_PORT: 9999
      KAFKA_JMX_HOSTNAME: ${DOCKER_HOST_IP:-127.0.0.1}
      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
    depends_on:
      - zookeeper


  mongodb:
    image: mongo:7.0.12
    container_name: mongodb
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGODB_ROOT_USER}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGODB_ROOT_PASSWORD}
    volumes:
      - /usr/local/mongo:/data_con
    expose:
      - ${MONGO_PORT}
    ports:
      - ${MONGO_PORT}:${MONGO_PORT}
    networks:
      - app-tier

  mysql:
    image: mysql:8.1
    container_name: mysql
    restart: always
    environment:
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_USER=${MYSQL_USER} # GRANT ALL to MYSQL_DATABASE
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    volumes:
      - /usr/local/mysql2:/var/lib/mysql
    ports:
      - '3307:3306'
    networks:
      - app-tier

  my-app:
    image: madhu1creator/spring-boot-kafka-radis-mysql-mongo-curd-app:architect-app-v0.1
    container_name: my-app
    restart: on-failure
    expose:
      - ${APP_PORT}
    ports:
      - ${APP_PORT}:${APP_PORT}
    depends_on:
      - mysql
      - mongodb
      - zookeeper
      - kafka
    command: ["java", "-jar", "/app/your-app.jar"]
    extra_hosts:
      host.docker.internal: 172.17.0.1
    networks:
      - app-tier


networks:
  app-tier:
    driver: bridge
